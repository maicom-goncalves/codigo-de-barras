{"ast":null,"code":"var _jsxFileName = \"/home/maicom/Documentos/novapasta/src/components/Scanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport config from \"./config.json\";\nimport Quagga from \"quagga\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scanner = props => {\n  _s();\n\n  const {\n    onDetected\n  } = props;\n  useEffect(() => {\n    Quagga.init(config, err => {\n      if (err) {\n        console.log(err, \"error msg\");\n      }\n\n      Quagga.start();\n      return () => {\n        Quagga.stop();\n      };\n    });\n    Quagga.onProcessed(result => {\n      var drawingCtx = Quagga.canvas.ctx.overlay,\n          drawingCanvas = Quagga.canvas.dom.overlay;\n\n      if (result) {\n        if (result.boxes) {\n          drawingCtx.clearRect(0, 0, Number(drawingCanvas.getAttribute(\"width\")), Number(drawingCanvas.getAttribute(\"height\")));\n          result.boxes.filter(function (box) {\n            return box !== result.box;\n          }).forEach(function (box) {\n            Quagga.ImageDebug.drawPath(box, {\n              x: 0,\n              y: 1\n            }, drawingCtx, {\n              color: \"green\",\n              lineWidth: 2\n            });\n          });\n        }\n\n        if (result.box) {\n          Quagga.ImageDebug.drawPath(result.box, {\n            x: 0,\n            y: 1\n          }, drawingCtx, {\n            color: \"#00F\",\n            lineWidth: 2\n          }); //Quagga.stop();\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n          Quagga.ImageDebug.drawPath(result.line, {\n            x: \"x\",\n            y: \"y\"\n          }, drawingCtx, {\n            color: \"red\",\n            lineWidth: 3\n          });\n          Quagga.stop();\n        }\n      }\n    });\n    Quagga.onDetected(detected);\n  }, []);\n  Quagga.onDetected(function (data) {\n    Quagga.stop();\n  });\n\n  const detected = result => {\n    onDetected(result.codeResult.code);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"interactive\",\n      className: \"viewport\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scanner, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Scanner;\nexport default Scanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"sources":["/home/maicom/Documentos/novapasta/src/components/Scanner.js"],"names":["React","useEffect","config","Quagga","Scanner","props","onDetected","init","err","console","log","start","stop","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","Number","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","code","line","detected","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport config from \"./config.json\";\nimport Quagga from \"quagga\";\n\nconst Scanner = props => {\n  const { onDetected } = props;\n  useEffect(() => {\n    Quagga.init(config, err => {\n      if (err) {\n        console.log(err, \"error msg\");\n      }\n      Quagga.start();\n      return () => {\n        Quagga.stop()\n      }\n    });\n    Quagga.onProcessed(result => {\n      var drawingCtx = Quagga.canvas.ctx.overlay,\n        drawingCanvas = Quagga.canvas.dom.overlay;\n\n      if (result) {\n        if (result.boxes) {\n          drawingCtx.clearRect(\n            0,\n            0,\n            Number(drawingCanvas.getAttribute(\"width\")),\n            Number(drawingCanvas.getAttribute(\"height\"))\n          );\n          result.boxes\n            .filter(function (box) {\n              return box !== result.box;\n            })\n            .forEach(function (box) {\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                color: \"green\",\n                lineWidth: 2\n              });\n            });\n        }\n\n        if (result.box) {\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n            color: \"#00F\",\n            lineWidth: 2\n          });\n          //Quagga.stop();\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n          Quagga.ImageDebug.drawPath(\n            result.line,\n            { x: \"x\", y: \"y\" },\n            drawingCtx,\n            { color: \"red\", lineWidth: 3 }\n          );\n\n          Quagga.stop();\n        }\n\n      }\n    });\n\n    Quagga.onDetected(detected);\n  }, []);\n\n  Quagga.onDetected(function (data) {\n    Quagga.stop();\n  });\n\n  const detected = result => {\n    onDetected(result.codeResult.code);\n\n  };\n\n  return (\n    <div id=\"container\">\n      <div id=\"interactive\" className=\"viewport\" />\n    </div>\n  );\n};\nexport default Scanner;"]},"metadata":{},"sourceType":"module"}